# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first', models.CharField(blank=True, max_length=100, verbose_name='First name')),
                ('middle', models.CharField(blank=True, max_length=100, verbose_name='Middle name')),
                ('last', models.CharField(blank=True, max_length=100, verbose_name='Last name')),
                ('suffix', models.CharField(blank=True, max_length=100, verbose_name='Name suffix')),
                ('dob', models.DateField(null=True, help_text='Use the format YYYY-MM-DD (EX: 1972-07-01 for July 01, 1972)', blank=True, verbose_name='Date of birth')),
                ('ssn', models.CharField(help_text='Enter 9 digit SSN Do not enter hyphens EX: 555210987', blank=True, max_length=9, verbose_name='SSN')),
                ('gender', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='Gender', choices=[(0, 'Female'), (1, 'Male'), (2, 'Transgender male to female'), (3, 'Transgender female to male'), (4, 'Other'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('other_gender', models.TextField(blank=True, verbose_name='If "Other" for gender, please specify')),
                ('ethnicity', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='Ethnicity', choices=[(0, 'Non-Hispanic/Non-Latino'), (1, 'Hispanic/Latino'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('race', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='Race', choices=[(1, 'American Indian or Alaska Native'), (2, 'Asian'), (3, 'Black or African American'), (4, 'Native Hawaiian or Other Pacific Islander'), (5, 'White'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('veteran_status', models.PositiveIntegerField(null=True, help_text='Only collect veteran status if client is over 18.', blank=True, choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')], default=None, verbose_name='Veteran status (adults only)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientAnnualAssessment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_insurance', models.PositiveIntegerField(null=True, default=None, verbose_name='Client has health insurance', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('health_insurance_medicaid', models.PositiveIntegerField(default=0, verbose_name='MEDICAID', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_medicare', models.PositiveIntegerField(default=0, verbose_name='MEDICARE', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_chip', models.PositiveIntegerField(default=0, verbose_name='State Children’s Health Insurance Program (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_va', models.PositiveIntegerField(default=0, verbose_name='Veteran’s Administration (VA) Medical Services', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_employer', models.PositiveIntegerField(default=0, verbose_name='Employer – Provided Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_cobra', models.PositiveIntegerField(default=0, verbose_name='Health Insurance obtained through COBRA', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_private', models.PositiveIntegerField(default=0, verbose_name='Private Pay Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_state', models.PositiveIntegerField(default=0, verbose_name='State Health Insurance for Adults (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_none_reason', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If none of the above, give reason', choices=[(1, 'Applied; decision pending'), (2, 'Applied; client not eligible'), (3, 'Client did not apply'), (4, 'Insurance type N/A for this client'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a physical disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the physical disability expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a developmental disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the developmental disability expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a chronic health condition?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the chronic health condition expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have HIV/AIDS?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is HIV/AIDS expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a mental health problem?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the mental health problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a substance abuse problem?', choices=[(0, 'No'), (1, 'Alcohol abuse'), (2, 'Drug abuse'), (3, 'Both alcohol and drug abuse'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes for alcohol abuse, drug abuse, or both, is the substance abuse problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence', models.PositiveIntegerField(null=True, default=None, verbose_name='Client is a victim/survivor of domestic violence', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence_occurred', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If Client has experience domestic violence, when?', choices=[(1, 'Within the past three months'), (2, 'Three to six months ago (excluding six months exactly)'), (3, 'Six months to one year ago (excluding one year exactly)'), (4, 'One year ago or more'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientEntryAssessment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_insurance', models.PositiveIntegerField(null=True, default=None, verbose_name='Client has health insurance', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('health_insurance_medicaid', models.PositiveIntegerField(default=0, verbose_name='MEDICAID', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_medicare', models.PositiveIntegerField(default=0, verbose_name='MEDICARE', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_chip', models.PositiveIntegerField(default=0, verbose_name='State Children’s Health Insurance Program (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_va', models.PositiveIntegerField(default=0, verbose_name='Veteran’s Administration (VA) Medical Services', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_employer', models.PositiveIntegerField(default=0, verbose_name='Employer – Provided Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_cobra', models.PositiveIntegerField(default=0, verbose_name='Health Insurance obtained through COBRA', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_private', models.PositiveIntegerField(default=0, verbose_name='Private Pay Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_state', models.PositiveIntegerField(default=0, verbose_name='State Health Insurance for Adults (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_none_reason', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If none of the above, give reason', choices=[(1, 'Applied; decision pending'), (2, 'Applied; client not eligible'), (3, 'Client did not apply'), (4, 'Insurance type N/A for this client'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a physical disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the physical disability expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a developmental disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the developmental disability expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a chronic health condition?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the chronic health condition expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have HIV/AIDS?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is HIV/AIDS expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a mental health problem?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the mental health problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a substance abuse problem?', choices=[(0, 'No'), (1, 'Alcohol abuse'), (2, 'Drug abuse'), (3, 'Both alcohol and drug abuse'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes for alcohol abuse, drug abuse, or both, is the substance abuse problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('housing_status', models.PositiveIntegerField(null=True, default=None, verbose_name='Housing status', choices=[(1, 'Category 1 - Homeless'), (2, 'Category 2 - At imminent risk of losing housing'), (5, 'Category 3 - Homeless only under other federal statutes'), (6, 'Category 4 - Fleeing domestic violence'), (3, 'At-risk of homelessness '), (4, 'Stably Housed'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('homeless_at_least_one_year', models.PositiveIntegerField(null=True, default=None, verbose_name='Continuously homeless for at least one year', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('homeless_in_three_years', models.PositiveIntegerField(null=True, default=None, verbose_name='Number of times the client has been homeless in the past three years', choices=[(0, '0 (not homeless - Prevention only)'), (1, '1 (homeless only this time)'), (2, '2'), (3, '3'), (4, '4 or more'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('homeless_months_in_three_years', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If client has been homeless 4 or more times, how many total months homeless in the past three years', choices=[(100, '0'), (101, '1'), (102, '2'), (103, '3'), (104, '4'), (105, '5'), (106, '6'), (107, '7'), (108, '8'), (109, '9'), (110, '10'), (111, '11'), (112, '12'), (7, 'More than 12 months'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('homeless_months_prior', models.PositiveIntegerField(null=True, verbose_name='Total number of months continuously homeless immediately prior to project entry (partial months should be rounded UP)')),
                ('status_documented', models.PositiveIntegerField(null=True, blank=True, choices=[(0, 'No'), (1, 'Yes')])),
                ('prior_residence', models.PositiveIntegerField(null=True, default=None, verbose_name='Type of residence prior to project entry', choices=[(1, 'Emergency shelter, including hotel or motel paid for with emergency shelter voucher'), (15, 'Foster care home or foster care group home'), (6, 'Hospital or other residential non-psychiatric medical facility'), (14, 'Hotel or motel paid for without emergency shelter voucher'), (7, 'Jail, prison or juvenile detention facility'), (24, 'Long-term care facility or nursing home'), (23, 'Owned by client, no ongoing housing subsidy'), (21, 'Owned by client, with ongoing housing subsidy'), (3, 'Permanent housing for formerly homeless persons (such as: a CoC project; HUD legacy programs; or HOPWA PH)'), (16, 'Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside)'), (4, 'Psychiatric hospital or other psychiatric facility'), (22, 'Rental by client, no ongoing housing subsidy'), (19, 'Rental by client, with VASH subsidy'), (25, 'Rental by client, with GPD TIP subsidy'), (20, 'Rental by client, with other ongoing housing subsidy'), (26, 'Residential project or halfway house with no homeless criteria'), (18, 'Safe Haven'), (12, 'Staying or living in a family member’s room, apartment or house'), (13, 'Staying or living in a friend’s room, apartment or house'), (5, 'Substance abuse treatment facility or detox center'), (2, 'Transitional housing for homeless persons (including homeless youth)'), (17, 'Other'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('prior_residence_other', models.TextField(blank=True, verbose_name='If "Other" for type of residence, specify where')),
                ('length_at_prior_residence', models.PositiveIntegerField(null=True, default=None, verbose_name='Length of time at prior residence', choices=[(10, 'One day or less'), (11, 'Two days to one week'), (2, 'More than one week, but less than one month'), (3, 'One to three months'), (4, 'More than three months, but less than one year'), (5, 'One year or longer'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence', models.PositiveIntegerField(null=True, default=None, verbose_name='Client is a victim/survivor of domestic violence', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence_occurred', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If Client has experience domestic violence, when?', choices=[(1, 'Within the past three months'), (2, 'Three to six months ago (excluding six months exactly)'), (3, 'Six months to one year ago (excluding one year exactly)'), (4, 'One year ago or more'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('project_entry_date', models.DateField(null=True, help_text='Note that you MUST set an entry date for a client to be enrolled.')),
            ],
            options={
                'verbose_name_plural': 'Client entry assessment',
            },
        ),
        migrations.CreateModel(
            name='ClientExitAssessment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_insurance', models.PositiveIntegerField(null=True, default=None, verbose_name='Client has health insurance', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('health_insurance_medicaid', models.PositiveIntegerField(default=0, verbose_name='MEDICAID', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_medicare', models.PositiveIntegerField(default=0, verbose_name='MEDICARE', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_chip', models.PositiveIntegerField(default=0, verbose_name='State Children’s Health Insurance Program (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_va', models.PositiveIntegerField(default=0, verbose_name='Veteran’s Administration (VA) Medical Services', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_employer', models.PositiveIntegerField(default=0, verbose_name='Employer – Provided Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_cobra', models.PositiveIntegerField(default=0, verbose_name='Health Insurance obtained through COBRA', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_private', models.PositiveIntegerField(default=0, verbose_name='Private Pay Health Insurance', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_state', models.PositiveIntegerField(default=0, verbose_name='State Health Insurance for Adults (or use local name)', choices=[(0, 'No'), (1, 'Yes')])),
                ('health_insurance_none_reason', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If none of the above, give reason', choices=[(1, 'Applied; decision pending'), (2, 'Applied; client not eligible'), (3, 'Client did not apply'), (4, 'Insurance type N/A for this client'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a physical disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('physical_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the physical disability expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a developmental disability?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('developmental_disability_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the developmental disability expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a chronic health condition?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('chronic_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the chronic health condition expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have HIV/AIDS?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('hiv_aids_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is HIV/AIDS expected to substantially impair ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a mental health problem?', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('mental_health_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes, is the mental health problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse', models.PositiveIntegerField(null=True, default=None, verbose_name='Does the client have a substance abuse problem?', choices=[(0, 'No'), (1, 'Alcohol abuse'), (2, 'Drug abuse'), (3, 'Both alcohol and drug abuse'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('substance_abuse_impairing', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If yes for alcohol abuse, drug abuse, or both, is the substance abuse problem expected to be of long–continued and indefinite duration and substantially impairs ability to live independently', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence', models.PositiveIntegerField(null=True, default=None, verbose_name='Client is a victim/survivor of domestic violence', choices=[(0, 'No'), (1, 'Yes'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('domestic_violence_occurred', models.PositiveIntegerField(null=True, blank=True, default=None, verbose_name='If Client has experience domestic violence, when?', choices=[(1, 'Within the past three months'), (2, 'Three to six months ago (excluding six months exactly)'), (3, 'Six months to one year ago (excluding one year exactly)'), (4, 'One year ago or more'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('destination', models.PositiveIntegerField(null=True, blank=True, choices=[(24, 'Deceased'), (1, 'Emergency shelter, including hotel or motel paid for with emergency shelter voucher'), (15, 'Foster care home or foster care group home'), (6, 'Hospital or other residential non-psychiatric medical facility'), (14, 'Hotel or motel paid for without emergency shelter voucher'), (7, 'Jail, prison or juvenile detention facility'), (25, 'Long-term care facility or nursing home'), (26, 'Moved from one HOPWA funded project to HOPWA PH'), (27, 'Moved from one HOPWA funded project to HOPWA TH'), (11, 'Owned by client, no ongoing housing subsidy'), (21, 'Owned by client, with ongoing housing subsidy'), (3, 'Permanent housing for formerly homeless persons (such as: CoC project; or HUD legacy programs; or HOPWA PH)'), (16, 'Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside)'), (4, 'Psychiatric hospital or other psychiatric facility'), (10, 'Rental by client, no ongoing housing subsidy'), (19, 'Rental by client, with VASH housing subsidy'), (28, 'Rental by client, with GPD TIP housing subsidy'), (20, 'Rental by client, with other ongoing housing subsidy'), (29, 'Residential project or halfway house with no homeless criteria'), (18, 'Safe Haven'), (22, 'Staying or living with family, permanent tenure'), (12, 'Staying or living with family, temporary tenure (e.g., room, apartment or house)'), (23, 'Staying or living with friends, permanent tenure'), (13, 'Staying or living with friends, temporary tenure (e.g., room apartment or house)'), (5, 'Substance abuse treatment facility or detox center'), (2, 'Transitional housing for homeless persons (including homeless youth)'), (17, 'Other'), (30, 'No exit interview completed'), (8, 'Client doesn’t know'), (9, 'Client refused'), (None, '(Please choose an option)')])),
                ('destination_other', models.TextField(blank=True)),
                ('project_exit_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Household',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referral_notes', models.TextField(blank=True, verbose_name='Referral notes')),
            ],
            options={
                'verbose_name_plural': 'household referrals',
                'verbose_name': 'household referral',
                'permissions': [('refer_household', 'Can refer household to a project'), ('enroll_household', 'Can enroll household in a project')],
            },
        ),
        migrations.CreateModel(
            name='HouseholdMember',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hoh_relationship', models.PositiveIntegerField(verbose_name='Relationship to head of household', choices=[(None, '(Please select a relationship to the head of household)'), (1, 'Self (head of household)'), (2, 'Head of household’s child'), (3, 'Head of household’s spouse or partner'), (4, 'Head of household’s other relation member (other relation to head of household)'), (5, 'Other: non-relation member')])),
                ('present_at_enrollment', models.BooleanField(default=True, verbose_name='Present at enrollment')),
                ('client', models.ForeignKey(to='simplehmis.Client', related_name='memberships')),
                ('household', models.ForeignKey(to='simplehmis.Household', related_name='members')),
            ],
            options={
                'ordering': ['hoh_relationship'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID', auto_created=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('admins', models.ManyToManyField(to=settings.AUTH_USER_MODEL, blank=True, related_name='projects')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='household',
            name='project',
            field=models.ForeignKey(null=True, blank=True, to='simplehmis.Project'),
        ),
        migrations.AddField(
            model_name='clientexitassessment',
            name='member',
            field=models.OneToOneField(to='simplehmis.HouseholdMember', related_name='exit_assessment'),
        ),
        migrations.AddField(
            model_name='cliententryassessment',
            name='member',
            field=models.OneToOneField(to='simplehmis.HouseholdMember', related_name='entry_assessment'),
        ),
        migrations.AddField(
            model_name='clientannualassessment',
            name='member',
            field=models.ForeignKey(to='simplehmis.HouseholdMember', related_name='annual_assessments'),
        ),
    ]
